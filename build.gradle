buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0-beta2'
    }
}
allprojects {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "com.samwhited.opensharelocationplugin"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 10
        versionName "2.1.1"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        disable 'MissingTranslation'
    }
    //
    // To sign release builds, create the file `gradle.properties` in
    // $HOME/.gradle or in your project directory with this content:
    //
    // mStoreFile=/path/to/key.store
    // mStorePassword=xxx
    // mKeyAlias=alias
    // mKeyPassword=xxx
    //
    if (project.hasProperty('mStoreFile') &&
            project.hasProperty('mStorePassword') &&
            project.hasProperty('mKeyAlias') &&
            project.hasProperty('mKeyPassword')) {
        signingConfigs {
            release {
                storeFile file(project.properties.get('mStoreFile'))
                storePassword project.properties.get('mStorePassword')
                keyAlias project.properties.get('mKeyAlias')
                keyPassword project.properties.get('mKeyPassword')
            }
        }
        defaultConfig.signingConfig = signingConfigs.release
        buildTypes.release.signingConfig = signingConfigs.release
        buildTypes.debug.signingConfig = signingConfigs.release
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def SIGNED = variant.signingConfig != null ? 'signed' : 'unsigned'
            def alignedOutputFile = output.outputFile
            if (variant.buildType.zipAlignEnabled) {
                output.outputFile = new File(
                        (String) alignedOutputFile.parent,
                        rootProject.name + "-${variant.name}-${SIGNED}-${variant.versionName}.apk"
                )
            }
        }
    }
}

task copyAssets(type: Copy)
copyAssets {
    description = 'Copies asset files into the appropriate source directory'
    from '.'
    into 'src/main/assets/'
    include('LICENSE')
}

preBuild.dependsOn(copyAssets)

apply plugin: 'base'
clean.doFirst({
    delete('src/main/assets')
})

dependencies {
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:support-v4:25.1.0'
    compile 'org.osmdroid:osmdroid-android:5.6.3@aar'
}
